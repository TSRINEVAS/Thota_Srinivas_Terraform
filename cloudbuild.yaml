timeout: 3600s  # 60 minute timeout for safety

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8
  diskSizeGb: 100
  env:
    - TF_IN_AUTOMATION=true
    - TF_INPUT=false
    - TF_CLI_ARGS=-no-color
  substitution_option: ALLOW_LOOSE

substitutions:
  _BUILD_ID: ${BUILD_ID}
  _APPROVAL_TIMEOUT: "7200"  # 2 hours in seconds
  _GCS_BUCKET: "thotaterra"
  _PLANS_PATH: "terraform-plans"
  _APPROVALS_PATH: "terraform-approvals"

availableSecrets:
  secretManager:
    - versionName: projects/vaulted-epigram-457004-c6/secrets/service-account-key/versions/latest
      env: SERVICE_ACCOUNT_KEY

serviceAccount: 'terraformfordevlopment@vaulted-epigram-457004-c6.iam.gserviceaccount.com'

steps:
  # ========== PREFLIGHT CHECKS ==========
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: Validate Environment
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        echo "Validating GCS bucket exists..."
        gsutil ls gs://${_GCS_BUCKET} || { echo "Bucket ${_GCS_BUCKET} not found"; exit 1; }
        echo "Creating directories if needed..."
        gsutil -m stat gs://${_GCS_BUCKET}/${_APPROVALS_PATH}/ || \
          gsutil -m mkdir gs://${_GCS_BUCKET}/${_APPROVALS_PATH}/
        gsutil -m stat gs://${_GCS_BUCKET}/${_PLANS_PATH}/ || \
          gsutil -m mkdir gs://${_GCS_BUCKET}/${_PLANS_PATH}/

  # ========== AUTH SETUP ==========
  - name: gcr.io/cloud-builders/gcloud
    id: Setup Auth
    entrypoint: bash
    secretEnv: [SERVICE_ACCOUNT_KEY]
    args:
      - -c
      - |
        set -euo pipefail
        echo "$$SERVICE_ACCOUNT_KEY" > /workspace/key.json
        chmod 600 /workspace/key.json
        export GOOGLE_APPLICATION_CREDENTIALS=/workspace/key.json
        gcloud auth activate-service-account --key-file=/workspace/key.json
        gcloud config set core/project vaulted-epigram-457004-c6

  # ========== TERRAFORM INIT ==========
  - name: hashicorp/terraform:1.5.7
    id: Terraform Init
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform init \
          -backend-config="bucket=${_GCS_BUCKET}" \
          -backend-config="prefix=terraform/state" \
          -reconfigure \
          -upgrade

  # ========== TERRAFORM VALIDATE ==========
  - name: hashicorp/terraform:1.5.7
    id: Terraform Validate
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform validate

  # ========== TERRAFORM PLAN ==========
  - name: hashicorp/terraform:1.5.7
    id: Terraform Plan
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform plan \
          -var-file="terraform.tfvars" \
          -out=tfplan.binary \
          -detailed-exitcode || [ $? -eq 2 ]
        terraform show -json tfplan.binary > tfplan.json

  # ========== UPLOAD PLAN ARTIFACTS ==========
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: Upload Plan
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        gsutil -m cp tfplan.binary gs://${_GCS_BUCKET}/${_PLANS_PATH}/${_BUILD_ID}.binary
        gsutil -m cp tfplan.json gs://${_GCS_BUCKET}/${_PLANS_PATH}/${_BUILD_ID}.json
        echo "Terraform plan artifacts:"
        echo "Binary: gs://${_GCS_BUCKET}/${_PLANS_PATH}/${_BUILD_ID}.binary"
        echo "JSON:  gs://${_GCS_BUCKET}/${_PLANS_PATH}/${_BUILD_ID}.json"
        echo ""
        echo "To approve this build, run:"
        echo "gsutil touch gs://${_GCS_BUCKET}/${_APPROVALS_PATH}/approve-${_BUILD_ID}"

  # ========== APPROVAL GATE ==========
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: Wait for Approval
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        echo "Waiting for approval (Timeout: ${_APPROVAL_TIMEOUT}s)..."
        
        START_TIME=$(date +%s)
        TIMEOUT_SECONDS=${_APPROVAL_TIMEOUT}
        
        while true; do
          CURRENT_TIME=$(date +%s)
          ELAPSED=$((CURRENT_TIME - START_TIME))
          
          if [ "$ELAPSED" -ge "$TIMEOUT_SECONDS" ]; then
            echo "Timeout reached without approval. Exiting."
            exit 1
          fi
          
          if gsutil -q stat gs://${_GCS_BUCKET}/${_APPROVALS_PATH}/approve-${_BUILD_ID}; then
            echo "Approval detected. Downloading plan..."
            gsutil cp gs://${_GCS_BUCKET}/${_PLANS_PATH}/${_BUILD_ID}.binary tfplan.binary
            break
          fi
          
          echo "Waiting... ($((TIMEOUT_SECONDS - ELAPSED))s remaining)"
          sleep 30
        done

  # ========== TERRAFORM APPLY ==========
  - name: hashicorp/terraform:1.5.7
    id: Terraform Apply
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform apply -auto-approve tfplan.binary

  # ========== CLEANUP ==========
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: Cleanup Approval
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        echo "Cleaning up approval file..."
        gsutil rm gs://${_GCS_BUCKET}/${_APPROVALS_PATH}/approve-${_BUILD_ID} || \
          echo "No approval file found (already cleaned up)"
        echo "Build completed successfully"
