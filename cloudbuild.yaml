options:
  logging: CLOUD_LOGGING_ONLY
  # IMPORTANT: Needed to use "approval"
  requestedVerifyOption: VERIFIED

availableSecrets:
  secretManager:
    - versionName: projects/vaulted-epigram-457004-c6/secrets/service-account-key/versions/latest
      env: 'SERVICE_ACCOUNT_KEY'

serviceAccount: 'terraformfordevlopment@vaulted-epigram-457004-c6.iam.gserviceaccount.com'

steps:
  - name: gcr.io/cloud-builders/gcloud
    id: Setup Auth
    entrypoint: sh
    secretEnv: ['SERVICE_ACCOUNT_KEY']
    args:
      - -c
      - |
        echo "$$SERVICE_ACCOUNT_KEY" > key.json
        export GOOGLE_APPLICATION_CREDENTIALS=/workspace/key.json

  - name: hashicorp/terraform:1.5.7
    id: Terraform Init
    entrypoint: sh
    args:
      - -c
      - |
        export GOOGLE_APPLICATION_CREDENTIALS=/workspace/key.json
        terraform init \
          -backend-config="bucket=thotaterra" \
          -backend-config="prefix=terraform/state" \
          -reconfigure

  - name: hashicorp/terraform:1.5.7
    id: Terraform Plan
    entrypoint: sh
    args:
      - -c
      - |
        export GOOGLE_APPLICATION_CREDENTIALS=/workspace/key.json
        terraform plan -var-file="terraform.tfvars"

  - id: Manual Approval
    waitFor:
      - Terraform Plan
    approvalRequired: true

  - name: hashicorp/terraform:1.5.7
    id: Terraform Apply
    entrypoint: sh
    waitFor:
      - Manual Approval
    args:
      - -c
      - |
        export GOOGLE_APPLICATION_CREDENTIALS=/workspace/key.json
        terraform apply -var-file="terraform.tfvars" -auto-approve

  - name: hashicorp/terraform:1.5.7
    id: Terraform Output
    entrypoint: sh
    args:
      - -c
      - |
        export GOOGLE_APPLICATION_CREDENTIALS=/workspace/key.json
        terraform output
