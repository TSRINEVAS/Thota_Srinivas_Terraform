timeout: 1800s  # 30-minute timeout (adjust as needed)

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8
  diskSizeGb: 100
  env:
    - TF_IN_AUTOMATION=true
    - TF_INPUT=false
    - TF_CLI_ARGS=-no-color

substitutions:
  _GCS_BUCKET: "thotaterra"
  _STATE_PREFIX: "terraform/state"

availableSecrets:
  secretManager:
    - versionName: projects/vaulted-epigram-457004-c6/secrets/service-account-key/versions/latest
      env: SERVICE_ACCOUNT_KEY

serviceAccount: 'terraformfordevlopment@vaulted-epigram-457004-c6.iam.gserviceaccount.com'

steps:
  # ========== AUTHENTICATION ==========
  - name: gcr.io/cloud-builders/gcloud
    id: Authenticate
    entrypoint: bash
    secretEnv: [SERVICE_ACCOUNT_KEY]
    args:
      - -c
      - |
        set -euo pipefail
        echo "$$SERVICE_ACCOUNT_KEY" > /workspace/key.json
        chmod 600 /workspace/key.json
        export GOOGLE_APPLICATION_CREDENTIALS=/workspace/key.json
        gcloud auth activate-service-account --key-file=/workspace/key.json
        gcloud config set core/project vaulted-epigram-457004-c6

  # ========== TERRAFORM INIT ==========
  - name: hashicorp/terraform:1.5.7
    id: Init
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform init \
          -backend-config="bucket=${_GCS_BUCKET}" \
          -backend-config="prefix=${_STATE_PREFIX}" \
          -reconfigure \
          -upgrade

  # ========== TERRAFORM VALIDATE ==========
  - name: hashicorp/terraform:1.5.7
    id: Validate
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform validate

  # ========== TERRAFORM PLAN ==========
  - name: hashicorp/terraform:1.5.7
    id: Plan
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform plan \
          -var-file="terraform.tfvars" \
          -out=tfplan.binary \
          -detailed-exitcode || [ $? -eq 2 ]

  # ========== TERRAFORM APPLY ==========
  - name: hashicorp/terraform:1.5.7
    id: Apply
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform apply -auto-approve tfplan.binary

  # ========== OUTPUTS ==========
  - name: hashicorp/terraform:1.5.7
    id: Outputs
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform output -json > /workspace/tf_output.json
        echo "Terraform outputs saved to /workspace/tf_output.json"
