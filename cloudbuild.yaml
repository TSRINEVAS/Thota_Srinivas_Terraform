options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8
  diskSizeGb: 100
  env:
    - TF_IN_AUTOMATION=true
    - TF_INPUT=false

availableSecrets:
  secretManager:
    - versionName: projects/vaulted-epigram-457004-c6/secrets/service-account-key/versions/latest
      env: SERVICE_ACCOUNT_KEY

serviceAccount: 'terraformfordevlopment@vaulted-epigram-457004-c6.iam.gserviceaccount.com'

steps:
  # ========== SETUP & PLAN PHASE ==========
  - name: gcr.io/cloud-builders/gcloud
    id: Setup Auth
    entrypoint: bash
    secretEnv: [SERVICE_ACCOUNT_KEY]
    args:
      - -c
      - |
        set -euo pipefail
        echo "$$SERVICE_ACCOUNT_KEY" > /workspace/key.json
        chmod 600 /workspace/key.json
        export GOOGLE_APPLICATION_CREDENTIALS=/workspace/key.json
        gcloud auth activate-service-account --key-file=/workspace/key.json

  - name: hashicorp/terraform:1.5.7
    id: Terraform Init
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform init \
          -backend-config="bucket=thotaterra" \
          -backend-config="prefix=terraform/state" \
          -reconfigure \
          -upgrade

  - name: hashicorp/terraform:1.5.7
    id: Terraform Plan
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform plan \
          -var-file="terraform.tfvars" \
          -out=tfplan.binary \
          -detailed-exitcode || [ $? -eq 2 ]
        terraform show -json tfplan.binary > tfplan.json

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: Upload Plan
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        BUILD_ID=${BUILD_ID}
        gsutil cp tfplan.binary gs://thotaterra/terraform-plans/${BUILD_ID}.binary
        gsutil cp tfplan.json gs://thotaterra/terraform-plans/${BUILD_ID}.json
        echo "Plan files uploaded with BUILD_ID: ${BUILD_ID}"
        echo "Please review and create an empty file named 'approve-${BUILD_ID}' in gs://thotaterra/terraform-approvals/ to proceed"

  # ========== APPROVAL CHECK ==========
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: Wait for Approval
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        echo "Waiting for approval..."
        while true; do
          if gsutil ls gs://thotaterra/terraform-approvals/approve-${BUILD_ID} &>/dev/null; then
            echo "Approval detected, proceeding with apply"
            break
          fi
          echo "Approval not found. Checking again in 30 seconds..."
          sleep 30
        done

        # Download the approved plan
        gsutil cp gs://thotaterra/terraform-plans/${BUILD_ID}.binary tfplan.binary

  # ========== APPLY PHASE ==========
  - name: hashicorp/terraform:1.5.7
    id: Terraform Apply
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        terraform apply -auto-approve tfplan.binary

  # ========== CLEANUP ==========
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: Cleanup Approval
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        gsutil rm gs://thotaterra/terraform-approvals/approve-${BUILD_ID} || true
        echo "Approval file removed"
